# Root logger option

# 1. 로그 출력 Level은 INFO부터 할것임.
#    DEBUG > INFO > WARN > ERROR > FATAL 
# DEBUG ==> 일반 정보를 상세히 나타낼 때 사용 
# INFO  ==> 일반 정보를 나타낼 때 사용
# WARN  ==> 에러는 아니지만 주의할 필요가 있을 때 사용 (경고용)
# ERROR ==> 일반적인 에러가 방생했을 때 사용
# FATAL ==> 가장 위험한 에러가 났을 때 사용 
# 2. rootLogger 에 사용할 로깅 Appender로 stdout이라는것과 
#    logfile이라는 것 두가지를 사용하겠다
#log4j.rootLogger=debug, stdout, logfile
log4j.rootLogger=info, stdout, logfile

# Direct log messages to stdout
# ConversionPattern은 로그가 어떠한 형식으로 출력될것인지 
# 그 포맷을 정의하는 것.
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p (%C{2}:%L) - %m%n

# 파일에 출력하는 부분, 파일에 출력할 필요가 없으면 이 부분을 생략하면 된다. 
# Direct log message to log file
# logfile이라는 appender는 로그를 파일로 출력해주는 놈인데, 
# 파일path를 정의 할 수 있다.
log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.logfile.DatePattern='.'yyyy-MM-dd
log4j.appender.logfile.File=D:/d_other/application.log
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] %5p (%C{2} - %M:%L) - %m%n
log4j.appender.logfile.Append=true

# ibatis의 처리되는 SQL문과 사용되는 데이터, 결과 등을 알려주는 설정
log4j.logger.java.sql.Connection=debug, logfile
log4j.logger.java.sql.Statement=debug, logfile
log4j.logger.java.sql.PreparedStatement=debug, logfile
log4j.logger.java.sql.ResultSet=debug, logfile
